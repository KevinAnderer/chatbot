{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Kevin\\\\Documents\\\\Bachelor-Thesis-Research\\\\Chatbot-Frontend\\\\chatbot\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { timer, take } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../controller/api-controller.service\";\nimport * as i2 from \"@nebular/theme\";\nimport * as i3 from \"@angular/common\";\n\nfunction ChatbotComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function ChatbotComponent_div_1_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const data_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onSubmitClick(data_r3._id);\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const data_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", data_r3.name, \" \");\n  }\n}\n\nconst _c0 = function (a0, a1, a2) {\n  return {\n    name: a0,\n    _id: a1,\n    sender: a2\n  };\n};\n\nfunction ChatbotComponent_nb_chat_message_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nb-chat-message\", 6);\n  }\n\n  if (rf & 2) {\n    const msg_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"type\", msg_r6.type)(\"message\", msg_r6.type === \"button\" ? \"\" : msg_r6.text)(\"reply\", msg_r6.reply)(\"sender\", msg_r6.sender)(\"avatar\", msg_r6.avatar)(\"customMessageData\", i0.ɵɵpureFunction3(6, _c0, msg_r6.name, msg_r6._id, msg_r6.sender));\n  }\n}\n\nfunction ChatbotComponent_nb_chat_message_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nb-chat-message\", 7);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"avatar\", ctx_r2.messages[0].avatar)(\"nbSpinner\", ctx_r2.loading);\n  }\n}\n\nexport class ChatbotComponent {\n  constructor(service) {\n    this.service = service;\n    this.messages = [];\n    this.loading = false;\n    this.startEvent = [{\n      name: 'greeting',\n      payload: {\n        eventCategory: 'test',\n        eventAction: 'test'\n      },\n      tpKey: 'de',\n      scope: 'event'\n    }];\n    this.buttons = [];\n  }\n\n  ngOnInit() {\n    this.sendEvent(this.startEvent);\n  }\n\n  handleUserMessage(event) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      // this.buttons = [];\n      console.log('handleUserMessage', event);\n      const text = event.message;\n      let textEvent = [{\n        payload: {\n          eventCategory: 'test',\n          eventAction: 'test'\n        },\n        tpKey: 'de',\n        scope: 'event',\n        text: text\n      }];\n\n      _this.addUserMessage(text);\n\n      _this.loading = true;\n      yield timer(1000).pipe(take(1)).toPromise();\n\n      _this.sendEvent(textEvent);\n    })();\n  }\n\n  addUserMessage(text) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.messages.push({\n        text,\n        sender: 'Du',\n        reply: true,\n        date: new Date()\n      });\n\n      yield timer(1).pipe(take(1)).toPromise();\n      window.scroll({\n        top: document.body.scrollHeight,\n        left: 0,\n        behavior: 'smooth'\n      });\n    })();\n  }\n\n  addBotMessage(text, type, name, id) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      _this3.messages.push({\n        type,\n        text,\n        sender: 'BAICA',\n        avatar: '/assets/chatbot.jpeg',\n        date: new Date(),\n        name: name,\n        _id: id\n      });\n\n      yield timer(1).pipe(take(1)).toPromise();\n      window.scroll({\n        top: document.body.scrollHeight,\n        left: 0,\n        behavior: 'smooth'\n      });\n    })();\n  }\n\n  onSubmitClick(id) {\n    this.buttons = [];\n    console.log(id);\n    let textEvent = [{\n      payload: {\n        eventCategory: 'test',\n        eventAction: 'test'\n      },\n      tpKey: 'de',\n      scope: 'event',\n      suggestedOptions: {\n        _id: id\n      }\n    }];\n    this.sendEvent(textEvent);\n  }\n\n  sendEvent(events) {\n    this.service.find(events, '/action').subscribe(event => {\n      console.log('bricks from event api', event);\n\n      if (event.length > 0) {\n        event.forEach(e => {\n          let eventResponse = e.content.data.title;\n          let type = 'text';\n          this.addBotMessage(eventResponse, type, '', '');\n          this.loading = false;\n\n          if (e.suggestedOptions.length > 0) {\n            e.suggestedOptions.forEach(so => {\n              type = 'button';\n              this.addBotMessage(eventResponse, type, so.name, so._id);\n            });\n          }\n        });\n      }\n\n      if (event.length === 0) {\n        this.sendEvent(events);\n      }\n    });\n  }\n\n  login(events) {\n    this.service.find(events, '/test');\n  }\n\n}\n\nChatbotComponent.ɵfac = function ChatbotComponent_Factory(t) {\n  return new (t || ChatbotComponent)(i0.ɵɵdirectiveInject(i1.ApiControllerService));\n};\n\nChatbotComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatbotComponent,\n  selectors: [[\"app-chatbot\"]],\n  decls: 5,\n  vars: 3,\n  consts: [[\"title\", \"Conversation with a Chatbot\"], [4, \"nbCustomMessage\"], [3, \"type\", \"message\", \"reply\", \"sender\", \"avatar\", \"customMessageData\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"test\", \"nbSpinnerStatus\", \"info\", \"type\", \"text\", \"message\", \"schreibt...\", 3, \"avatar\", \"nbSpinner\", 4, \"ngIf\"], [3, \"send\"], [\"nbButton\", \"\", 3, \"click\"], [3, \"type\", \"message\", \"reply\", \"sender\", \"avatar\", \"customMessageData\"], [\"nbSpinnerStatus\", \"info\", \"type\", \"text\", \"message\", \"schreibt...\", 1, \"test\", 3, \"avatar\", \"nbSpinner\"]],\n  template: function ChatbotComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"nb-chat\", 0);\n      i0.ɵɵtemplate(1, ChatbotComponent_div_1_Template, 3, 1, \"div\", 1);\n      i0.ɵɵtemplate(2, ChatbotComponent_nb_chat_message_2_Template, 1, 10, \"nb-chat-message\", 2);\n      i0.ɵɵtemplate(3, ChatbotComponent_nb_chat_message_3_Template, 1, 2, \"nb-chat-message\", 3);\n      i0.ɵɵelementStart(4, \"nb-chat-form\", 4);\n      i0.ɵɵlistener(\"send\", function ChatbotComponent_Template_nb_chat_form_send_4_listener($event) {\n        return ctx.handleUserMessage($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"nbCustomMessage\", \"button\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n    }\n  },\n  directives: [i2.NbChatComponent, i2.NbChatCustomMessageDirective, i3.NgForOf, i3.NgIf, i2.NbChatFormComponent, i2.NbButtonComponent, i2.NbChatMessageComponent, i2.NbSpinnerDirective],\n  styles: [\".button-custom-message-text[_ngcontent-%COMP%] {\\n  margin-top: 0;\\n}\\n\\n  .nb-theme-dark nb-layout .scrollable-container {\\n  width: 520px !important;\\n}\\n\\n  .nb-theme-dark nb-layout .layout {\\n  min-height: 0;\\n  background-color: #ffffff;\\n}\\n\\n  .nb-theme-dark nb-chat {\\n  height: 720px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoYXRib3QuY29tcG9uZW50LnNhc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0FBQ0Y7O0FBQ0E7RUFDRSx1QkFBQTtBQUVGOztBQUFBO0VBQ0UsYUFBQTtFQUNBLHlCQUFBO0FBR0Y7O0FBREE7RUFDRSxhQUFBO0FBSUYiLCJmaWxlIjoiY2hhdGJvdC5jb21wb25lbnQuc2FzcyIsInNvdXJjZXNDb250ZW50IjpbIi5idXR0b24tY3VzdG9tLW1lc3NhZ2UtdGV4dFxyXG4gIG1hcmdpbi10b3A6IDBcclxuXHJcbjo6bmctZGVlcCAubmItdGhlbWUtZGFyayBuYi1sYXlvdXQgLnNjcm9sbGFibGUtY29udGFpbmVyXHJcbiAgd2lkdGg6IDUyMHB4ICFpbXBvcnRhbnRcclxuXHJcbjo6bmctZGVlcCAubmItdGhlbWUtZGFyayBuYi1sYXlvdXQgLmxheW91dFxyXG4gIG1pbi1oZWlnaHQ6IDBcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmXHJcblxyXG46Om5nLWRlZXAgLm5iLXRoZW1lLWRhcmsgbmItY2hhdFxyXG4gIGhlaWdodDogNzIwcHgiXX0= */\"]\n});","map":{"version":3,"sources":["C:/Users/Kevin/Documents/Bachelor-Thesis-Research/Chatbot-Frontend/chatbot/src/app/chatbot/chatbot.component.ts"],"names":["timer","take","i0","i1","i2","i3","ChatbotComponent_div_1_Template","rf","ctx","_r5","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","ChatbotComponent_div_1_Template_button_click_1_listener","restoredCtx","ɵɵrestoreView","data_r3","$implicit","ctx_r4","ɵɵnextContext","onSubmitClick","_id","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","name","_c0","a0","a1","a2","sender","ChatbotComponent_nb_chat_message_2_Template","ɵɵelement","msg_r6","ɵɵproperty","type","text","reply","avatar","ɵɵpureFunction3","ChatbotComponent_nb_chat_message_3_Template","ctx_r2","messages","loading","ChatbotComponent","constructor","service","startEvent","payload","eventCategory","eventAction","tpKey","scope","buttons","ngOnInit","sendEvent","handleUserMessage","event","console","log","message","textEvent","addUserMessage","pipe","toPromise","push","date","Date","window","scroll","top","document","body","scrollHeight","left","behavior","addBotMessage","id","suggestedOptions","events","find","subscribe","length","forEach","e","eventResponse","content","data","title","so","login","ɵfac","ChatbotComponent_Factory","t","ɵɵdirectiveInject","ApiControllerService","ɵcmp","ɵɵdefineComponent","selectors","decls","vars","consts","template","ChatbotComponent_Template","ɵɵtemplate","ChatbotComponent_Template_nb_chat_form_send_4_listener","$event","directives","NbChatComponent","NbChatCustomMessageDirective","NgForOf","NgIf","NbChatFormComponent","NbButtonComponent","NbChatMessageComponent","NbSpinnerDirective","styles"],"mappings":"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","sourcesContent":["import { timer, take } from 'rxjs';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"../controller/api-controller.service\";\r\nimport * as i2 from \"@nebular/theme\";\r\nimport * as i3 from \"@angular/common\";\r\nfunction ChatbotComponent_div_1_Template(rf, ctx) { if (rf & 1) {\r\n    const _r5 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"div\");\r\n    i0.ɵɵelementStart(1, \"button\", 5);\r\n    i0.ɵɵlistener(\"click\", function ChatbotComponent_div_1_Template_button_click_1_listener() { const restoredCtx = i0.ɵɵrestoreView(_r5); const data_r3 = restoredCtx.$implicit; const ctx_r4 = i0.ɵɵnextContext(); return ctx_r4.onSubmitClick(data_r3._id); });\r\n    i0.ɵɵtext(2);\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const data_r3 = ctx.$implicit;\r\n    i0.ɵɵadvance(2);\r\n    i0.ɵɵtextInterpolate1(\" \", data_r3.name, \" \");\r\n} }\r\nconst _c0 = function (a0, a1, a2) { return { name: a0, _id: a1, sender: a2 }; };\r\nfunction ChatbotComponent_nb_chat_message_2_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"nb-chat-message\", 6);\r\n} if (rf & 2) {\r\n    const msg_r6 = ctx.$implicit;\r\n    i0.ɵɵproperty(\"type\", msg_r6.type)(\"message\", msg_r6.type === \"button\" ? \"\" : msg_r6.text)(\"reply\", msg_r6.reply)(\"sender\", msg_r6.sender)(\"avatar\", msg_r6.avatar)(\"customMessageData\", i0.ɵɵpureFunction3(6, _c0, msg_r6.name, msg_r6._id, msg_r6.sender));\r\n} }\r\nfunction ChatbotComponent_nb_chat_message_3_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"nb-chat-message\", 7);\r\n} if (rf & 2) {\r\n    const ctx_r2 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"avatar\", ctx_r2.messages[0].avatar)(\"nbSpinner\", ctx_r2.loading);\r\n} }\r\nexport class ChatbotComponent {\r\n    constructor(service) {\r\n        this.service = service;\r\n        this.messages = [];\r\n        this.loading = false;\r\n        this.startEvent = [\r\n            {\r\n                name: 'greeting',\r\n                payload: { eventCategory: 'test', eventAction: 'test' },\r\n                tpKey: 'de',\r\n                scope: 'event',\r\n            },\r\n        ];\r\n        this.buttons = [];\r\n    }\r\n    ngOnInit() {\r\n        this.sendEvent(this.startEvent);\r\n    }\r\n    async handleUserMessage(event) {\r\n        // this.buttons = [];\r\n        console.log('handleUserMessage', event);\r\n        const text = event.message;\r\n        let textEvent = [\r\n            {\r\n                payload: {\r\n                    eventCategory: 'test',\r\n                    eventAction: 'test',\r\n                },\r\n                tpKey: 'de',\r\n                scope: 'event',\r\n                text: text,\r\n            },\r\n        ];\r\n        this.addUserMessage(text);\r\n        this.loading = true;\r\n        await timer(1000).pipe(take(1)).toPromise();\r\n        this.sendEvent(textEvent);\r\n    }\r\n    async addUserMessage(text) {\r\n        this.messages.push({\r\n            text,\r\n            sender: 'Du',\r\n            reply: true,\r\n            date: new Date(),\r\n        });\r\n        await timer(1).pipe(take(1)).toPromise();\r\n        window.scroll({\r\n            top: document.body.scrollHeight,\r\n            left: 0,\r\n            behavior: 'smooth',\r\n        });\r\n    }\r\n    async addBotMessage(text, type, name, id) {\r\n        this.messages.push({\r\n            type,\r\n            text,\r\n            sender: 'BAICA',\r\n            avatar: '/assets/chatbot.jpeg',\r\n            date: new Date(),\r\n            name: name,\r\n            _id: id,\r\n        });\r\n        await timer(1).pipe(take(1)).toPromise();\r\n        window.scroll({\r\n            top: document.body.scrollHeight,\r\n            left: 0,\r\n            behavior: 'smooth',\r\n        });\r\n    }\r\n    onSubmitClick(id) {\r\n        this.buttons = [];\r\n        console.log(id);\r\n        let textEvent = [\r\n            {\r\n                payload: {\r\n                    eventCategory: 'test',\r\n                    eventAction: 'test',\r\n                },\r\n                tpKey: 'de',\r\n                scope: 'event',\r\n                suggestedOptions: { _id: id },\r\n            },\r\n        ];\r\n        this.sendEvent(textEvent);\r\n    }\r\n    sendEvent(events) {\r\n        this.service\r\n            .find(events, '/action')\r\n            .subscribe((event) => {\r\n            console.log('bricks from event api', event);\r\n            if (event.length > 0) {\r\n                event.forEach((e) => {\r\n                    let eventResponse = e.content.data.title;\r\n                    let type = 'text';\r\n                    this.addBotMessage(eventResponse, type, '', '');\r\n                    this.loading = false;\r\n                    if (e.suggestedOptions.length > 0) {\r\n                        e.suggestedOptions.forEach((so) => {\r\n                            type = 'button';\r\n                            this.addBotMessage(eventResponse, type, so.name, so._id);\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            if (event.length === 0) {\r\n                this.sendEvent(events);\r\n            }\r\n        });\r\n    }\r\n    login(events) {\r\n        this.service.find(events, '/test');\r\n    }\r\n}\r\nChatbotComponent.ɵfac = function ChatbotComponent_Factory(t) { return new (t || ChatbotComponent)(i0.ɵɵdirectiveInject(i1.ApiControllerService)); };\r\nChatbotComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ChatbotComponent, selectors: [[\"app-chatbot\"]], decls: 5, vars: 3, consts: [[\"title\", \"Conversation with a Chatbot\"], [4, \"nbCustomMessage\"], [3, \"type\", \"message\", \"reply\", \"sender\", \"avatar\", \"customMessageData\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"test\", \"nbSpinnerStatus\", \"info\", \"type\", \"text\", \"message\", \"schreibt...\", 3, \"avatar\", \"nbSpinner\", 4, \"ngIf\"], [3, \"send\"], [\"nbButton\", \"\", 3, \"click\"], [3, \"type\", \"message\", \"reply\", \"sender\", \"avatar\", \"customMessageData\"], [\"nbSpinnerStatus\", \"info\", \"type\", \"text\", \"message\", \"schreibt...\", 1, \"test\", 3, \"avatar\", \"nbSpinner\"]], template: function ChatbotComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"nb-chat\", 0);\r\n        i0.ɵɵtemplate(1, ChatbotComponent_div_1_Template, 3, 1, \"div\", 1);\r\n        i0.ɵɵtemplate(2, ChatbotComponent_nb_chat_message_2_Template, 1, 10, \"nb-chat-message\", 2);\r\n        i0.ɵɵtemplate(3, ChatbotComponent_nb_chat_message_3_Template, 1, 2, \"nb-chat-message\", 3);\r\n        i0.ɵɵelementStart(4, \"nb-chat-form\", 4);\r\n        i0.ɵɵlistener(\"send\", function ChatbotComponent_Template_nb_chat_form_send_4_listener($event) { return ctx.handleUserMessage($event); });\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"nbCustomMessage\", \"button\");\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx.messages);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\r\n    } }, directives: [i2.NbChatComponent, i2.NbChatCustomMessageDirective, i3.NgForOf, i3.NgIf, i2.NbChatFormComponent, i2.NbButtonComponent, i2.NbChatMessageComponent, i2.NbSpinnerDirective], styles: [\".button-custom-message-text[_ngcontent-%COMP%] {\\n  margin-top: 0;\\n}\\n\\n  .nb-theme-dark nb-layout .scrollable-container {\\n  width: 520px !important;\\n}\\n\\n  .nb-theme-dark nb-layout .layout {\\n  min-height: 0;\\n  background-color: #ffffff;\\n}\\n\\n  .nb-theme-dark nb-chat {\\n  height: 720px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoYXRib3QuY29tcG9uZW50LnNhc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0FBQ0Y7O0FBQ0E7RUFDRSx1QkFBQTtBQUVGOztBQUFBO0VBQ0UsYUFBQTtFQUNBLHlCQUFBO0FBR0Y7O0FBREE7RUFDRSxhQUFBO0FBSUYiLCJmaWxlIjoiY2hhdGJvdC5jb21wb25lbnQuc2FzcyIsInNvdXJjZXNDb250ZW50IjpbIi5idXR0b24tY3VzdG9tLW1lc3NhZ2UtdGV4dFxyXG4gIG1hcmdpbi10b3A6IDBcclxuXHJcbjo6bmctZGVlcCAubmItdGhlbWUtZGFyayBuYi1sYXlvdXQgLnNjcm9sbGFibGUtY29udGFpbmVyXHJcbiAgd2lkdGg6IDUyMHB4ICFpbXBvcnRhbnRcclxuXHJcbjo6bmctZGVlcCAubmItdGhlbWUtZGFyayBuYi1sYXlvdXQgLmxheW91dFxyXG4gIG1pbi1oZWlnaHQ6IDBcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmXHJcblxyXG46Om5nLWRlZXAgLm5iLXRoZW1lLWRhcmsgbmItY2hhdFxyXG4gIGhlaWdodDogNzIwcHgiXX0= */\"] });\r\n"]},"metadata":{},"sourceType":"module"}