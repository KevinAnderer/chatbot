{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Kevin\\\\Documents\\\\Bachelor-Thesis-Research\\\\Chatbot-Frontend\\\\chatbot\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component, Directive } from '@angular/core';\nimport { timer } from 'rxjs';\nimport { take } from 'rxjs/operators';\nlet ChatbotComponent = class ChatbotComponent {\n  constructor(http, el) {\n    this.http = http;\n    this.el = el;\n    this.messages = [];\n    this.loading = false;\n    this.observer = new MutationObserver(() => {\n      this.scrollToPin();\n    });\n  }\n\n  ngOnInit() {\n    this.addBotMessage('Hiluu');\n    this.observer.observe(this.el.nativeElement, {\n      childList: true\n    });\n  }\n\n  ngOnDestroy() {\n    this.observer.disconnect();\n  }\n\n  handleUserMessage(event) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      console.log(event);\n      const text = event.message;\n\n      _this.addUserMessage(text);\n\n      _this.loading = true;\n      yield timer(1000).pipe(take(1)).toPromise();\n\n      _this.addBotMessage('Cool');\n\n      _this.loading = false;\n    })();\n  }\n\n  addUserMessage(text) {\n    this.messages.push({\n      text,\n      sender: 'You',\n      reply: true,\n      date: new Date()\n    });\n  }\n\n  addBotMessage(text) {\n    this.messages.push({\n      text,\n      sender: 'BAICA',\n      avatar: '/assets/chatbot.jpeg',\n      date: new Date()\n    });\n  }\n\n  scrollToPin() {\n    this.el.nativeElement.scrollTop = this.el.nativeElement.scrollHeight;\n  }\n\n};\nChatbotComponent = __decorate([Component({\n  selector: 'app-chatbot',\n  templateUrl: './chatbot.component.html',\n  styleUrls: ['./chatbot.component.sass']\n}), Directive({\n  selector: '[pinScroll]'\n})], ChatbotComponent);\nexport { ChatbotComponent };","map":{"version":3,"sources":["C:/Users/Kevin/Documents/Bachelor-Thesis-Research/Chatbot-Frontend/chatbot/src/app/chatbot/chatbot.component.ts"],"names":["__decorate","Component","Directive","timer","take","ChatbotComponent","constructor","http","el","messages","loading","observer","MutationObserver","scrollToPin","ngOnInit","addBotMessage","observe","nativeElement","childList","ngOnDestroy","disconnect","handleUserMessage","event","console","log","text","message","addUserMessage","pipe","toPromise","push","sender","reply","date","Date","avatar","scrollTop","scrollHeight","selector","templateUrl","styleUrls"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,eAArC;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,IAAIC,gBAAgB,GAAG,MAAMA,gBAAN,CAAuB;AAC1CC,EAAAA,WAAW,CAACC,IAAD,EAAOC,EAAP,EAAW;AAClB,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,EAAL,GAAUA,EAAV;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,OAAL,GAAe,KAAf;AACA,SAAKC,QAAL,GAAgB,IAAIC,gBAAJ,CAAqB,MAAM;AACvC,WAAKC,WAAL;AACH,KAFe,CAAhB;AAGH;;AACDC,EAAAA,QAAQ,GAAG;AACP,SAAKC,aAAL,CAAmB,OAAnB;AACA,SAAKJ,QAAL,CAAcK,OAAd,CAAsB,KAAKR,EAAL,CAAQS,aAA9B,EAA6C;AACzCC,MAAAA,SAAS,EAAE;AAD8B,KAA7C;AAGH;;AACDC,EAAAA,WAAW,GAAG;AACV,SAAKR,QAAL,CAAcS,UAAd;AACH;;AACKC,EAAAA,iBAAiB,CAACC,KAAD,EAAQ;AAAA;;AAAA;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,YAAMG,IAAI,GAAGH,KAAK,CAACI,OAAnB;;AACA,MAAA,KAAI,CAACC,cAAL,CAAoBF,IAApB;;AACA,MAAA,KAAI,CAACf,OAAL,GAAe,IAAf;AACA,YAAMP,KAAK,CAAC,IAAD,CAAL,CAAYyB,IAAZ,CAAiBxB,IAAI,CAAC,CAAD,CAArB,EAA0ByB,SAA1B,EAAN;;AACA,MAAA,KAAI,CAACd,aAAL,CAAmB,MAAnB;;AACA,MAAA,KAAI,CAACL,OAAL,GAAe,KAAf;AAP2B;AAQ9B;;AACDiB,EAAAA,cAAc,CAACF,IAAD,EAAO;AACjB,SAAKhB,QAAL,CAAcqB,IAAd,CAAmB;AACfL,MAAAA,IADe;AAEfM,MAAAA,MAAM,EAAE,KAFO;AAGfC,MAAAA,KAAK,EAAE,IAHQ;AAIfC,MAAAA,IAAI,EAAE,IAAIC,IAAJ;AAJS,KAAnB;AAMH;;AACDnB,EAAAA,aAAa,CAACU,IAAD,EAAO;AAChB,SAAKhB,QAAL,CAAcqB,IAAd,CAAmB;AACfL,MAAAA,IADe;AAEfM,MAAAA,MAAM,EAAE,OAFO;AAGfI,MAAAA,MAAM,EAAE,sBAHO;AAIfF,MAAAA,IAAI,EAAE,IAAIC,IAAJ;AAJS,KAAnB;AAMH;;AACDrB,EAAAA,WAAW,GAAG;AACV,SAAKL,EAAL,CAAQS,aAAR,CAAsBmB,SAAtB,GAAkC,KAAK5B,EAAL,CAAQS,aAAR,CAAsBoB,YAAxD;AACH;;AA9CyC,CAA9C;AAgDAhC,gBAAgB,GAAGL,UAAU,CAAC,CAC1BC,SAAS,CAAC;AACNqC,EAAAA,QAAQ,EAAE,aADJ;AAENC,EAAAA,WAAW,EAAE,0BAFP;AAGNC,EAAAA,SAAS,EAAE,CAAC,0BAAD;AAHL,CAAD,CADiB,EAM1BtC,SAAS,CAAC;AACNoC,EAAAA,QAAQ,EAAE;AADJ,CAAD,CANiB,CAAD,EAS1BjC,gBAT0B,CAA7B;AAUA,SAASA,gBAAT","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component, Directive } from '@angular/core';\r\nimport { timer } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nlet ChatbotComponent = class ChatbotComponent {\r\n    constructor(http, el) {\r\n        this.http = http;\r\n        this.el = el;\r\n        this.messages = [];\r\n        this.loading = false;\r\n        this.observer = new MutationObserver(() => {\r\n            this.scrollToPin();\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this.addBotMessage('Hiluu');\r\n        this.observer.observe(this.el.nativeElement, {\r\n            childList: true,\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this.observer.disconnect();\r\n    }\r\n    async handleUserMessage(event) {\r\n        console.log(event);\r\n        const text = event.message;\r\n        this.addUserMessage(text);\r\n        this.loading = true;\r\n        await timer(1000).pipe(take(1)).toPromise();\r\n        this.addBotMessage('Cool');\r\n        this.loading = false;\r\n    }\r\n    addUserMessage(text) {\r\n        this.messages.push({\r\n            text,\r\n            sender: 'You',\r\n            reply: true,\r\n            date: new Date(),\r\n        });\r\n    }\r\n    addBotMessage(text) {\r\n        this.messages.push({\r\n            text,\r\n            sender: 'BAICA',\r\n            avatar: '/assets/chatbot.jpeg',\r\n            date: new Date(),\r\n        });\r\n    }\r\n    scrollToPin() {\r\n        this.el.nativeElement.scrollTop = this.el.nativeElement.scrollHeight;\r\n    }\r\n};\r\nChatbotComponent = __decorate([\r\n    Component({\r\n        selector: 'app-chatbot',\r\n        templateUrl: './chatbot.component.html',\r\n        styleUrls: ['./chatbot.component.sass'],\r\n    }),\r\n    Directive({\r\n        selector: '[pinScroll]',\r\n    })\r\n], ChatbotComponent);\r\nexport { ChatbotComponent };\r\n"]},"metadata":{},"sourceType":"module"}