{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Kevin\\\\Documents\\\\Bachelor-Thesis-Research\\\\Chatbot-Frontend\\\\chatbot\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { timer } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../controller/api-controller.service\";\nimport * as i2 from \"@nebular/theme\";\nimport * as i3 from \"@angular/common\";\n\nfunction ChatbotComponent_nb_chat_message_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nb-chat-message\", 4);\n  }\n\n  if (rf & 2) {\n    const msg_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"message\", msg_r2.text)(\"reply\", msg_r2.reply)(\"sender\", msg_r2.sender)(\"avatar\", msg_r2.avatar);\n  }\n}\n\nfunction ChatbotComponent_nb_chat_message_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"nb-chat-message\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"nbSpinner\", ctx_r1.loading);\n  }\n}\n\nexport class ChatbotComponent {\n  constructor(service) {\n    this.service = service;\n    this.messages = [];\n    this.loading = false;\n    this.startEvent = [{\n      name: 'greeting',\n      payload: {\n        eventCategory: 'test',\n        eventAction: 'test',\n        source: 'test'\n      },\n      tpKey: 'de',\n      scope: 'event'\n    }];\n  }\n\n  ngOnInit() {\n    this.sendEvent(this.startEvent);\n  }\n\n  handleUserMessage(event) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      console.log('handleUserMessage', event);\n      const text = event.message;\n      let textEvent = [{\n        payload: {\n          eventCategory: 'test',\n          eventAction: 'test',\n          source: 'test'\n        },\n        tpKey: 'de',\n        scope: 'event',\n        text: text\n      }];\n\n      _this.addUserMessage(text);\n\n      _this.loading = true;\n      yield timer(1000).pipe(take(1)).toPromise();\n\n      _this.sendEvent(textEvent);\n\n      _this.loading = false;\n    })();\n  }\n\n  addUserMessage(text) {\n    this.messages.push({\n      text,\n      sender: 'Du',\n      reply: true,\n      date: new Date()\n    });\n  }\n\n  addBotMessage(text) {\n    this.messages.push({\n      text,\n      sender: 'BAICA',\n      avatar: '/assets/chatbot.jpeg',\n      date: new Date()\n    });\n  }\n\n  sendEvent(events) {\n    this.service.find(events, '/action').subscribe(event => {\n      console.log('bricks from event api', event);\n      let limit = 0;\n      event.forEach(e => {\n        this.eventResponse = e.content.data.title;\n        this.addBotMessage(this.eventResponse);\n        this.loading = false;\n      });\n\n      if (event.length === 0 && limit < 3) {\n        limit += 1;\n        this.sendEvent(events); // this.addBotMessage(\n        //   'Huch scheint so als hätte ich kurz die Verbindung verloren, können Sie das bitte nochmals wiederholen?'\n        // );\n      }\n    });\n  }\n\n}\n\nChatbotComponent.ɵfac = function ChatbotComponent_Factory(t) {\n  return new (t || ChatbotComponent)(i0.ɵɵdirectiveInject(i1.ApiControllerService));\n};\n\nChatbotComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatbotComponent,\n  selectors: [[\"app-chatbot\"]],\n  decls: 4,\n  vars: 2,\n  consts: [[\"title\", \"Conversation with a Chatbot\"], [\"type\", \"text\", 3, \"message\", \"reply\", \"sender\", \"avatar\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"test\", \"nbSpinnerStatus\", \"info\", \"type\", \"text\", \"message\", \"schreibt...\", 3, \"nbSpinner\", 4, \"ngIf\"], [3, \"send\"], [\"type\", \"text\", 3, \"message\", \"reply\", \"sender\", \"avatar\"], [\"nbSpinnerStatus\", \"info\", \"type\", \"text\", \"message\", \"schreibt...\", 1, \"test\", 3, \"nbSpinner\"]],\n  template: function ChatbotComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"nb-chat\", 0);\n      i0.ɵɵtemplate(1, ChatbotComponent_nb_chat_message_1_Template, 1, 4, \"nb-chat-message\", 1);\n      i0.ɵɵtemplate(2, ChatbotComponent_nb_chat_message_2_Template, 1, 1, \"nb-chat-message\", 2);\n      i0.ɵɵelementStart(3, \"nb-chat-form\", 3);\n      i0.ɵɵlistener(\"send\", function ChatbotComponent_Template_nb_chat_form_send_3_listener($event) {\n        return ctx.handleUserMessage($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n    }\n  },\n  directives: [i2.NbChatComponent, i3.NgForOf, i3.NgIf, i2.NbChatFormComponent, i2.NbChatMessageComponent, i2.NbSpinnerDirective],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjaGF0Ym90LmNvbXBvbmVudC5zYXNzIn0= */\"]\n});","map":{"version":3,"sources":["C:/Users/Kevin/Documents/Bachelor-Thesis-Research/Chatbot-Frontend/chatbot/src/app/chatbot/chatbot.component.ts"],"names":["timer","take","i0","i1","i2","i3","ChatbotComponent_nb_chat_message_1_Template","rf","ctx","ɵɵelement","msg_r2","$implicit","ɵɵproperty","text","reply","sender","avatar","ChatbotComponent_nb_chat_message_2_Template","ctx_r1","ɵɵnextContext","loading","ChatbotComponent","constructor","service","messages","startEvent","name","payload","eventCategory","eventAction","source","tpKey","scope","ngOnInit","sendEvent","handleUserMessage","event","console","log","message","textEvent","addUserMessage","pipe","toPromise","push","date","Date","addBotMessage","events","find","subscribe","limit","forEach","e","eventResponse","content","data","title","length","ɵfac","ChatbotComponent_Factory","t","ɵɵdirectiveInject","ApiControllerService","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","ChatbotComponent_Template","ɵɵelementStart","ɵɵtemplate","ɵɵlistener","ChatbotComponent_Template_nb_chat_form_send_3_listener","$event","ɵɵelementEnd","ɵɵadvance","directives","NbChatComponent","NgForOf","NgIf","NbChatFormComponent","NbChatMessageComponent","NbSpinnerDirective","styles"],"mappings":";AAAA,SAASA,KAAT,QAAsB,MAAtB;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sCAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,gBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;;AACA,SAASC,2CAAT,CAAqDC,EAArD,EAAyDC,GAAzD,EAA8D;AAAE,MAAID,EAAE,GAAG,CAAT,EAAY;AACxEL,IAAAA,EAAE,CAACO,SAAH,CAAa,CAAb,EAAgB,iBAAhB,EAAmC,CAAnC;AACH;;AAAC,MAAIF,EAAE,GAAG,CAAT,EAAY;AACV,UAAMG,MAAM,GAAGF,GAAG,CAACG,SAAnB;AACAT,IAAAA,EAAE,CAACU,UAAH,CAAc,SAAd,EAAyBF,MAAM,CAACG,IAAhC,EAAsC,OAAtC,EAA+CH,MAAM,CAACI,KAAtD,EAA6D,QAA7D,EAAuEJ,MAAM,CAACK,MAA9E,EAAsF,QAAtF,EAAgGL,MAAM,CAACM,MAAvG;AACH;AAAE;;AACH,SAASC,2CAAT,CAAqDV,EAArD,EAAyDC,GAAzD,EAA8D;AAAE,MAAID,EAAE,GAAG,CAAT,EAAY;AACxEL,IAAAA,EAAE,CAACO,SAAH,CAAa,CAAb,EAAgB,iBAAhB,EAAmC,CAAnC;AACH;;AAAC,MAAIF,EAAE,GAAG,CAAT,EAAY;AACV,UAAMW,MAAM,GAAGhB,EAAE,CAACiB,aAAH,EAAf;AACAjB,IAAAA,EAAE,CAACU,UAAH,CAAc,WAAd,EAA2BM,MAAM,CAACE,OAAlC;AACH;AAAE;;AACH,OAAO,MAAMC,gBAAN,CAAuB;AAC1BC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKJ,OAAL,GAAe,KAAf;AACA,SAAKK,UAAL,GAAkB,CACd;AACIC,MAAAA,IAAI,EAAE,UADV;AAEIC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAE,MAAjB;AAAyBC,QAAAA,WAAW,EAAE,MAAtC;AAA8CC,QAAAA,MAAM,EAAE;AAAtD,OAFb;AAGIC,MAAAA,KAAK,EAAE,IAHX;AAIIC,MAAAA,KAAK,EAAE;AAJX,KADc,CAAlB;AAQH;;AACDC,EAAAA,QAAQ,GAAG;AACP,SAAKC,SAAL,CAAe,KAAKT,UAApB;AACH;;AACKU,EAAAA,iBAAiB,CAACC,KAAD,EAAQ;AAAA;;AAAA;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,KAAjC;AACA,YAAMvB,IAAI,GAAGuB,KAAK,CAACG,OAAnB;AACA,UAAIC,SAAS,GAAG,CACZ;AACIb,QAAAA,OAAO,EAAE;AACLC,UAAAA,aAAa,EAAE,MADV;AAELC,UAAAA,WAAW,EAAE,MAFR;AAGLC,UAAAA,MAAM,EAAE;AAHH,SADb;AAMIC,QAAAA,KAAK,EAAE,IANX;AAOIC,QAAAA,KAAK,EAAE,OAPX;AAQInB,QAAAA,IAAI,EAAEA;AARV,OADY,CAAhB;;AAYA,MAAA,KAAI,CAAC4B,cAAL,CAAoB5B,IAApB;;AACA,MAAA,KAAI,CAACO,OAAL,GAAe,IAAf;AACA,YAAMpB,KAAK,CAAC,IAAD,CAAL,CAAY0C,IAAZ,CAAiBzC,IAAI,CAAC,CAAD,CAArB,EAA0B0C,SAA1B,EAAN;;AACA,MAAA,KAAI,CAACT,SAAL,CAAeM,SAAf;;AACA,MAAA,KAAI,CAACpB,OAAL,GAAe,KAAf;AAnB2B;AAoB9B;;AACDqB,EAAAA,cAAc,CAAC5B,IAAD,EAAO;AACjB,SAAKW,QAAL,CAAcoB,IAAd,CAAmB;AACf/B,MAAAA,IADe;AAEfE,MAAAA,MAAM,EAAE,IAFO;AAGfD,MAAAA,KAAK,EAAE,IAHQ;AAIf+B,MAAAA,IAAI,EAAE,IAAIC,IAAJ;AAJS,KAAnB;AAMH;;AACDC,EAAAA,aAAa,CAAClC,IAAD,EAAO;AAChB,SAAKW,QAAL,CAAcoB,IAAd,CAAmB;AACf/B,MAAAA,IADe;AAEfE,MAAAA,MAAM,EAAE,OAFO;AAGfC,MAAAA,MAAM,EAAE,sBAHO;AAIf6B,MAAAA,IAAI,EAAE,IAAIC,IAAJ;AAJS,KAAnB;AAMH;;AACDZ,EAAAA,SAAS,CAACc,MAAD,EAAS;AACd,SAAKzB,OAAL,CACK0B,IADL,CACUD,MADV,EACkB,SADlB,EAEKE,SAFL,CAEgBd,KAAD,IAAW;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,KAArC;AACA,UAAIe,KAAK,GAAG,CAAZ;AACAf,MAAAA,KAAK,CAACgB,OAAN,CAAeC,CAAD,IAAO;AACjB,aAAKC,aAAL,GAAqBD,CAAC,CAACE,OAAF,CAAUC,IAAV,CAAeC,KAApC;AACA,aAAKV,aAAL,CAAmB,KAAKO,aAAxB;AACA,aAAKlC,OAAL,GAAe,KAAf;AACH,OAJD;;AAKA,UAAIgB,KAAK,CAACsB,MAAN,KAAiB,CAAjB,IAAsBP,KAAK,GAAG,CAAlC,EAAqC;AACjCA,QAAAA,KAAK,IAAI,CAAT;AACA,aAAKjB,SAAL,CAAec,MAAf,EAFiC,CAGjC;AACA;AACA;AACH;AACJ,KAjBD;AAkBH;;AAzEyB;;AA2E9B3B,gBAAgB,CAACsC,IAAjB,GAAwB,SAASC,wBAAT,CAAkCC,CAAlC,EAAqC;AAAE,SAAO,KAAKA,CAAC,IAAIxC,gBAAV,EAA4BnB,EAAE,CAAC4D,iBAAH,CAAqB3D,EAAE,CAAC4D,oBAAxB,CAA5B,CAAP;AAAoF,CAAnJ;;AACA1C,gBAAgB,CAAC2C,IAAjB,GAAwB,aAAc9D,EAAE,CAAC+D,iBAAH,CAAqB;AAAEC,EAAAA,IAAI,EAAE7C,gBAAR;AAA0B8C,EAAAA,SAAS,EAAE,CAAC,CAAC,aAAD,CAAD,CAArC;AAAwDC,EAAAA,KAAK,EAAE,CAA/D;AAAkEC,EAAAA,IAAI,EAAE,CAAxE;AAA2EC,EAAAA,MAAM,EAAE,CAAC,CAAC,OAAD,EAAU,6BAAV,CAAD,EAA2C,CAAC,MAAD,EAAS,MAAT,EAAiB,CAAjB,EAAoB,SAApB,EAA+B,OAA/B,EAAwC,QAAxC,EAAkD,QAAlD,EAA4D,CAA5D,EAA+D,OAA/D,EAAwE,SAAxE,CAA3C,EAA+H,CAAC,OAAD,EAAU,MAAV,EAAkB,iBAAlB,EAAqC,MAArC,EAA6C,MAA7C,EAAqD,MAArD,EAA6D,SAA7D,EAAwE,aAAxE,EAAuF,CAAvF,EAA0F,WAA1F,EAAuG,CAAvG,EAA0G,MAA1G,CAA/H,EAAkP,CAAC,CAAD,EAAI,MAAJ,CAAlP,EAA+P,CAAC,MAAD,EAAS,MAAT,EAAiB,CAAjB,EAAoB,SAApB,EAA+B,OAA/B,EAAwC,QAAxC,EAAkD,QAAlD,CAA/P,EAA4T,CAAC,iBAAD,EAAoB,MAApB,EAA4B,MAA5B,EAAoC,MAApC,EAA4C,SAA5C,EAAuD,aAAvD,EAAsE,CAAtE,EAAyE,MAAzE,EAAiF,CAAjF,EAAoF,WAApF,CAA5T,CAAnF;AAAkfC,EAAAA,QAAQ,EAAE,SAASC,yBAAT,CAAmCjE,EAAnC,EAAuCC,GAAvC,EAA4C;AAAE,QAAID,EAAE,GAAG,CAAT,EAAY;AACzmBL,MAAAA,EAAE,CAACuE,cAAH,CAAkB,CAAlB,EAAqB,SAArB,EAAgC,CAAhC;AACAvE,MAAAA,EAAE,CAACwE,UAAH,CAAc,CAAd,EAAiBpE,2CAAjB,EAA8D,CAA9D,EAAiE,CAAjE,EAAoE,iBAApE,EAAuF,CAAvF;AACAJ,MAAAA,EAAE,CAACwE,UAAH,CAAc,CAAd,EAAiBzD,2CAAjB,EAA8D,CAA9D,EAAiE,CAAjE,EAAoE,iBAApE,EAAuF,CAAvF;AACAf,MAAAA,EAAE,CAACuE,cAAH,CAAkB,CAAlB,EAAqB,cAArB,EAAqC,CAArC;AACAvE,MAAAA,EAAE,CAACyE,UAAH,CAAc,MAAd,EAAsB,SAASC,sDAAT,CAAgEC,MAAhE,EAAwE;AAAE,eAAOrE,GAAG,CAAC2B,iBAAJ,CAAsB0C,MAAtB,CAAP;AAAuC,OAAvI;AACA3E,MAAAA,EAAE,CAAC4E,YAAH;AACA5E,MAAAA,EAAE,CAAC4E,YAAH;AACH;;AAAC,QAAIvE,EAAE,GAAG,CAAT,EAAY;AACVL,MAAAA,EAAE,CAAC6E,SAAH,CAAa,CAAb;AACA7E,MAAAA,EAAE,CAACU,UAAH,CAAc,SAAd,EAAyBJ,GAAG,CAACgB,QAA7B;AACAtB,MAAAA,EAAE,CAAC6E,SAAH,CAAa,CAAb;AACA7E,MAAAA,EAAE,CAACU,UAAH,CAAc,MAAd,EAAsBJ,GAAG,CAACY,OAA1B;AACH;AAAE,GAboD;AAalD4D,EAAAA,UAAU,EAAE,CAAC5E,EAAE,CAAC6E,eAAJ,EAAqB5E,EAAE,CAAC6E,OAAxB,EAAiC7E,EAAE,CAAC8E,IAApC,EAA0C/E,EAAE,CAACgF,mBAA7C,EAAkEhF,EAAE,CAACiF,sBAArE,EAA6FjF,EAAE,CAACkF,kBAAhG,CAbsC;AAa+EC,EAAAA,MAAM,EAAE,CAAC,yKAAD;AAbvF,CAArB,CAAtC","sourcesContent":["import { timer } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"../controller/api-controller.service\";\r\nimport * as i2 from \"@nebular/theme\";\r\nimport * as i3 from \"@angular/common\";\r\nfunction ChatbotComponent_nb_chat_message_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"nb-chat-message\", 4);\r\n} if (rf & 2) {\r\n    const msg_r2 = ctx.$implicit;\r\n    i0.ɵɵproperty(\"message\", msg_r2.text)(\"reply\", msg_r2.reply)(\"sender\", msg_r2.sender)(\"avatar\", msg_r2.avatar);\r\n} }\r\nfunction ChatbotComponent_nb_chat_message_2_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"nb-chat-message\", 5);\r\n} if (rf & 2) {\r\n    const ctx_r1 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"nbSpinner\", ctx_r1.loading);\r\n} }\r\nexport class ChatbotComponent {\r\n    constructor(service) {\r\n        this.service = service;\r\n        this.messages = [];\r\n        this.loading = false;\r\n        this.startEvent = [\r\n            {\r\n                name: 'greeting',\r\n                payload: { eventCategory: 'test', eventAction: 'test', source: 'test' },\r\n                tpKey: 'de',\r\n                scope: 'event',\r\n            },\r\n        ];\r\n    }\r\n    ngOnInit() {\r\n        this.sendEvent(this.startEvent);\r\n    }\r\n    async handleUserMessage(event) {\r\n        console.log('handleUserMessage', event);\r\n        const text = event.message;\r\n        let textEvent = [\r\n            {\r\n                payload: {\r\n                    eventCategory: 'test',\r\n                    eventAction: 'test',\r\n                    source: 'test',\r\n                },\r\n                tpKey: 'de',\r\n                scope: 'event',\r\n                text: text,\r\n            },\r\n        ];\r\n        this.addUserMessage(text);\r\n        this.loading = true;\r\n        await timer(1000).pipe(take(1)).toPromise();\r\n        this.sendEvent(textEvent);\r\n        this.loading = false;\r\n    }\r\n    addUserMessage(text) {\r\n        this.messages.push({\r\n            text,\r\n            sender: 'Du',\r\n            reply: true,\r\n            date: new Date(),\r\n        });\r\n    }\r\n    addBotMessage(text) {\r\n        this.messages.push({\r\n            text,\r\n            sender: 'BAICA',\r\n            avatar: '/assets/chatbot.jpeg',\r\n            date: new Date(),\r\n        });\r\n    }\r\n    sendEvent(events) {\r\n        this.service\r\n            .find(events, '/action')\r\n            .subscribe((event) => {\r\n            console.log('bricks from event api', event);\r\n            let limit = 0;\r\n            event.forEach((e) => {\r\n                this.eventResponse = e.content.data.title;\r\n                this.addBotMessage(this.eventResponse);\r\n                this.loading = false;\r\n            });\r\n            if (event.length === 0 && limit < 3) {\r\n                limit += 1;\r\n                this.sendEvent(events);\r\n                // this.addBotMessage(\r\n                //   'Huch scheint so als hätte ich kurz die Verbindung verloren, können Sie das bitte nochmals wiederholen?'\r\n                // );\r\n            }\r\n        });\r\n    }\r\n}\r\nChatbotComponent.ɵfac = function ChatbotComponent_Factory(t) { return new (t || ChatbotComponent)(i0.ɵɵdirectiveInject(i1.ApiControllerService)); };\r\nChatbotComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: ChatbotComponent, selectors: [[\"app-chatbot\"]], decls: 4, vars: 2, consts: [[\"title\", \"Conversation with a Chatbot\"], [\"type\", \"text\", 3, \"message\", \"reply\", \"sender\", \"avatar\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"test\", \"nbSpinnerStatus\", \"info\", \"type\", \"text\", \"message\", \"schreibt...\", 3, \"nbSpinner\", 4, \"ngIf\"], [3, \"send\"], [\"type\", \"text\", 3, \"message\", \"reply\", \"sender\", \"avatar\"], [\"nbSpinnerStatus\", \"info\", \"type\", \"text\", \"message\", \"schreibt...\", 1, \"test\", 3, \"nbSpinner\"]], template: function ChatbotComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"nb-chat\", 0);\r\n        i0.ɵɵtemplate(1, ChatbotComponent_nb_chat_message_1_Template, 1, 4, \"nb-chat-message\", 1);\r\n        i0.ɵɵtemplate(2, ChatbotComponent_nb_chat_message_2_Template, 1, 1, \"nb-chat-message\", 2);\r\n        i0.ɵɵelementStart(3, \"nb-chat-form\", 3);\r\n        i0.ɵɵlistener(\"send\", function ChatbotComponent_Template_nb_chat_form_send_3_listener($event) { return ctx.handleUserMessage($event); });\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx.messages);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\r\n    } }, directives: [i2.NbChatComponent, i3.NgForOf, i3.NgIf, i2.NbChatFormComponent, i2.NbChatMessageComponent, i2.NbSpinnerDirective], styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjaGF0Ym90LmNvbXBvbmVudC5zYXNzIn0= */\"] });\r\n"]},"metadata":{},"sourceType":"module"}